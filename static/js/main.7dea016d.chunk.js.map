{"version":3,"sources":["components/Container/Container.js","components/TodoList/TodoList.js","components/TodoEditor/TodoEditor.js","components/Filter.js","App.js","index.js"],"names":["Container","children","className","TodoList","state","editValue","edit","onHandleChange","e","setState","target","value","editTodo","todoId","todoText","onSaveEditedTodo","props","onEditTodo","this","onToggleCompleted","todos","onDeleteTodo","map","id","text","completed","key","classNames","onChange","type","checked","aria-label","onClick","Component","TodoEditor","message","handleChange","currentTarget","handleSubmit","preventDefault","onSubmit","placeholder","Filter","App","initialTodos","filter","addTodo","length","todo","shortid","generate","deleteTodo","prevState","findTodo","find","filteredTodos","toggleCompleted","changeFilter","getVisibleTodos","normalizedFilter","toLowerCase","includes","calculateCompletedTodos","reduce","total","localStorage","getItem","parsedTodos","JSON","parse","prevProps","setItem","stringify","totalTodoCount","completedTodoCount","visibleTodos","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7dea016d.chunk.js","sourcesContent":["import React from 'react';\nimport './Container.scss';\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nexport default Container;\n","import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport './TodoList.scss';\n\nclass TodoList extends Component {\n  state = {\n    editValue: '',\n    edit: null,\n  };\n\n  onHandleChange = e => {\n    this.setState({ editValue: e.target.value });\n  };\n\n  editTodo = (todoId, todoText) => {\n    this.setState({ edit: todoId, editValue: todoText });\n  };\n\n  onSaveEditedTodo = todoId => {\n    this.props.onEditTodo(todoId, this.state.editValue);\n    this.setState({ edit: null });\n  };\n\n  render() {\n    const { onToggleCompleted, todos, onDeleteTodo } = this.props;\n    return (\n      <ul className=\"TodoList\">\n        {todos.map(({ id, text, completed }) => (\n          <li\n            key={id}\n            className={classNames('TodoList__item', {\n              'TodoList__item--completed': completed,\n            })}\n          >\n            <div className=\"TodoList__item--leftside\">\n              {this.state.edit === id ? (\n                <div>\n                  <input\n                    className=\"TodoList__inputsave\"\n                    onChange={this.onHandleChange}\n                    value={this.state.editValue}\n                  />\n                </div>\n              ) : (\n                <>\n                  <input\n                    type=\"checkbox\"\n                    className=\"TodoList__checkbox\"\n                    checked={completed}\n                    onChange={() => onToggleCompleted(id)}\n                  />\n                  <p className=\"TodoList__text\">{text}</p>\n                </>\n              )}\n            </div>\n            <div className=\"TodoList__item--rightside\">\n              {this.state.edit === id ? (\n                <div>\n                  <button\n                    aria-label=\"Кнопка сохранить\"\n                    type=\"button\"\n                    className=\"TodoList__savebtn\"\n                    onClick={() => this.onSaveEditedTodo(id)}\n                  ></button>\n                </div>\n              ) : (\n                <>\n                  <button\n                    type=\"button\"\n                    aria-label=\"Кнопка редактировать\"\n                    className=\"TodoList__editbtn\"\n                    onClick={() => this.editTodo(id, text)}\n                  ></button>\n                  <button\n                    type=\"button\"\n                    aria-label=\"Кнопка удалить\"\n                    className=\"TodoList__removebtn\"\n                    onClick={() => onDeleteTodo(id)}\n                  ></button>\n                </>\n              )}\n            </div>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default TodoList;\n","import React, { Component } from 'react';\nimport './TodoEditor.scss';\n\nclass TodoEditor extends Component {\n  state = {\n    message: '',\n  };\n\n  handleChange = e => {\n    this.setState({ message: e.currentTarget.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state.message);\n\n    this.setState({ message: '' });\n  };\n\n  render() {\n    return (\n      <form className=\"TodoEditor\" onSubmit={this.handleSubmit}>\n        <input\n          className=\"TodoEditor__input\"\n          value={this.state.message}\n          onChange={this.handleChange}\n          placeholder=\"Добавить задание\"\n        ></input>\n        <button type=\"submit\" className=\"TodoEditor__button\">\n          Добавить\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default TodoEditor;\n","import React from 'react';\n\nconst Filter = ({ value, onChange }) => (\n  <label className=\"TodoList__filter--label\">\n    <input\n      className=\"TodoList__filter--input\"\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n      placeholder=\"Фильтр по имени\"\n    />\n  </label>\n);\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport Container from './components/Container';\nimport TodoList from './components/TodoList';\nimport TodoEditor from './components/TodoEditor';\nimport Filter from './components/Filter';\nimport initialTodos from './todos.json';\n\nclass App extends Component {\n  state = {\n    todos: initialTodos,\n    filter: '',\n  };\n\n  addTodo = text => {\n    if (!text.length) {\n      return;\n    }\n    const todo = {\n      id: shortid.generate(),\n      text,\n      completed: false,\n    };\n\n    this.setState(({ todos }) => ({\n      todos: [todo, ...todos],\n    }));\n  };\n\n  deleteTodo = todoId => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== todoId),\n    }));\n  };\n\n  editTodo = (todoId, text) => {\n    this.setState(prevState => {\n      const findTodo = prevState.todos.find(todo => todo.id === todoId);\n      findTodo.text = text;\n      const filteredTodos = prevState.todos.filter(todo => todo.id !== todoId);\n      return {\n        todos: [findTodo, ...filteredTodos],\n      };\n    });\n  };\n\n  toggleCompleted = todoId => {\n    this.setState(({ todos }) => ({\n      todos: todos.map(todo =>\n        todo.id === todoId ? { ...todo, completed: !todo.completed } : todo,\n      ),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleTodos = () => {\n    const { filter, todos } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return todos.filter(todo =>\n      todo.text.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  calculateCompletedTodos = () => {\n    const { todos } = this.state;\n\n    return todos.reduce(\n      (total, todo) => (todo.completed ? total + 1 : total),\n      0,\n    );\n  };\n\n  componentDidMount() {\n    const todos = localStorage.getItem('todos');\n    const parsedTodos = JSON.parse(todos);\n\n    if (parsedTodos) {\n      this.setState(prevState => ({\n        todos: parsedTodos,\n      }));\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.todos !== prevState.todos) {\n      localStorage.setItem('todos', JSON.stringify(this.state.todos));\n    }\n  }\n\n  render() {\n    const { todos, filter } = this.state;\n    const totalTodoCount = todos.length;\n    const completedTodoCount = this.calculateCompletedTodos();\n    const visibleTodos = this.getVisibleTodos();\n\n    return (\n      <Container>\n        <h1 className=\"TodoList__title\">To Do List</h1>\n        <ul className=\"TodoList__counter\">\n          <li className=\"TodoList__counter--item\">\n            Всего заметок: {totalTodoCount}\n          </li>\n          <li className=\"TodoList__counter--item\">\n            Выполнено: {completedTodoCount}\n          </li>\n        </ul>\n\n        <TodoEditor onSubmit={this.addTodo} />\n\n        <Filter value={filter} onChange={this.changeFilter} />\n\n        <TodoList\n          todos={visibleTodos}\n          onDeleteTodo={this.deleteTodo}\n          onEditTodo={this.editTodo}\n          onToggleCompleted={this.toggleCompleted}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles/base.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}